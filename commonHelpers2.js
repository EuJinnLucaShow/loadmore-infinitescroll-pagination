/* empty css                     */import{a as E,S as w,i as l}from"./assets/vendor-a94593f8.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function o(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(t){if(t.ep)return;t.ep=!0;const s=o(t);fetch(t.href,s)}})();class P{constructor(){this.searchQuery="",this.page=1,this.PER_PAGE=40}async fetchGallery(){const r={method:"get",url:"https://pixabay.com/api/",params:{key:"34523545-f21683fd59bfc3e4e2549fe07",q:`${this.searchQuery}`,image_type:"photo",orientation:"horizontal",safesearch:!0,page:`${this.page}`,per_page:`${this.PER_PAGE}`}};try{return(await E(r)).data}catch(o){console.error(o)}}incrementPage(){this.page+=1}resetPage(){this.page=1}resetEndOfHits(){this.endOfHits=!1}get query(){return this.searchQuery}set query(r){this.searchQuery=r}}let _=new w(".photo-card a",{captions:!0,captionsData:"alt",captionDelay:250});const O=document.getElementById("search-button"),f=document.querySelector(".gallery"),u=document.querySelector("#search-bar");let a=0;const c=new P;let p=!0;O.addEventListener("click",m);u.addEventListener("keydown",function(e){e.key==="Enter"&&(e.preventDefault(),m()),p=!0});function m(){const e=u.value.trim();if(f.innerHTML="",c.query=e,c.resetPage(),e===""){q("Please, fill the main field");return}u.value="",a=0,y()}async function y(){try{const e=await c.fetchGallery(),{hits:r,totalHits:o}=e;if(!r.length){g("Sorry, there are no images matching your search query. Please try again.");return}p&&a<o&&(I(`Hooray! We found ${o} images !!!`),p=!1),S(r),a+=r.length;const n=f.lastElementChild;n&&h.observe(n),a>=o&&(h.disconnect(),R("You've reached the end of search results."))}catch(e){console.error("Error fetching gallery:",e),g("An error occurred while fetching the gallery.")}}function S(e){const r=e.map(({webformatURL:o,largeImageURL:n,tags:t,likes:s,views:i,comments:b,downloads:v})=>`
      <div class="photo-card">
        <a href="${n}">
          <img class="photo-img" src="${o}" alt="${t}" loading="lazy" />
        </a>
        <div class="info">
          <p class="info-item"><b>Likes</b><span class="info__span">${s}</span></p>
          <p class="info-item"><b>Views</b><span class="info__span">${i}</span></p>
          <p class="info-item"><b>Comments</b><span class="info__span">${b}</span></p>
          <p class="info-item"><b>Downloads</b><span class="info__span">${v}</span></p>
        </div>
      </div>`).join("");f.insertAdjacentHTML("beforeend",r),_.refresh()}const L={root:null,rootMargin:"0px",threshold:.5},h=new IntersectionObserver($,L);function $(e,r){e.forEach(o=>{o.isIntersecting&&(c.incrementPage(),y())})}const d=f.firstElementChild;d&&h.observe(d);function q(e){l.warning({title:"Warning",message:e,position:"topRight",color:"yellow"})}function g(e){l.error({title:"Error",message:e,position:"topRight",color:"red"})}function I(e){l.success({title:"Success",message:e,position:"topRight",color:"green"})}function R(e){l.info({title:"Info",message:e,position:"topRight",color:"blue"})}
//# sourceMappingURL=commonHelpers2.js.map
